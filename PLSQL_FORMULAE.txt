INSERTAR PILOTO (Procedimiento almacenado)

create or replace procedure insertar_piloto(
  p_id_numero in INT,
  p_nombre IN varchar,
  p_nacionalidad in varchar,
  p_id_equipo in int
 
)as
  p_contador int;
  
  BEGIN
    select COUNT(*) into p_contador FROM equipo where id_equipo = p_id_equipo;
    
    if p_contador = 0 then
    
    DBMS_OUTPUT.PUT_LINE('EL EQUIPO NO EXISTE');
    
    ELSE
    
    INSERT INTO piloto (id_numero,nombre,nacionalidad,id_equipo)
    values (p_id_numero, p_nombre, p_nacionalidad, p_id_equipo);
    
    COMMIT;
    
    END IF;
     
  END;  
/

 // cómo insertar nuevo piloto 

 exec insertar_piloto(78,'juan perez','mexico',5);

—----------------------------------------------------------------------------------------------------------

INSERTAR PARTICIPACIÓN (Procedimiento almacenado)

CREATE OR REPLACE PROCEDURE insertar_participacion(
  p_posicion in int,
  p_id_carrera in int,
  p_id_piloto in int,
  p_posicion_salida in int,
  p_posicion_llegada in int,
  p_mejor_tiempo in char,
  p_tiempo_total in char,
  p_puntos_obtenidos in int,
  p_estatus_participacion in varchar,
  p_tiempo_clasificatoria in char,
  p_estatus_clasificatoria in varchar
)as

begin  
     declare
       p_carrera_contador int;
       p_piloto_contador int;
     
     begin
       select COUNT(*) into p_carrera_contador 
       FROM carrera 
       where clave = p_id_carrera;
       
        select COUNT(*) into p_piloto_contador 
        from piloto 
        where id_numero = p_id_piloto;
        
        
        if p_carrera_contador = 0 then
        
        DBMS_OUTPUT.PUT_LINE('LA CARRERA NO EXISTE');
        
        ELSIF p_piloto_contador = 0 THEN
         DBMS_OUTPUT.PUT_LINE('EL PILOTO NO EXISTE');
       ELSE 
         INSERT INTO participacion(posicion,id_carrera,id_piloto,
         posicion_salida,posicion_llegada,mejor_tiempo,
         tiempo_total,puntos_obtenidos,estatus_participacion,
         TIEMPO_CLASIFICATORIA,ESTATUS_CLASIFICATORIA
         )
         
         values(p_posicion,p_id_carrera,p_id_piloto,p_posicion_salida,
         p_posicion_llegada,p_mejor_tiempo,p_tiempo_total,p_puntos_obtenidos,
         p_estatus_participacion,p_tiempo_clasificatoria,p_estatus_clasificatoria
         );
        
      end if;
    end;
end;
 /       
 
//COMO INSERTAR PARTICIPACIÓN

EXEC insertar_participacion(1,4,78,3,1,'1:23:213','1:00:123',28,'p','1:00:000','P13PTS');


—----------------------------------------------------------------------------------------------------------------


DISPARADOR QUE ACTUALIZA POCIONES EQUIPOS (Disparador)
//este disparador suma en automático los puntos obtenidos y los suma en la tabla posiciones equipos para actualizar las posiciones 

SQL> CREATE OR REPLACE TRIGGER actualizar_puntos_equipo
  2  AFTER INSERT ON Participacion
  3  FOR EACH ROW
  4  DECLARE
  5      v_puntos INT;
  6      v_id_equipo INT;
  7  BEGIN
  8      
  9      CASE :NEW.posicion
 10          WHEN 1 THEN v_puntos := 25;
 11          WHEN 2 THEN v_puntos := 18;
 12          WHEN 3 THEN v_puntos := 15;
 13          WHEN 4 THEN v_puntos := 12;
 14          WHEN 5 THEN v_puntos := 10;
 15          WHEN 6 THEN v_puntos := 8;
 16          WHEN 7 THEN v_puntos := 6;
 17          WHEN 8 THEN v_puntos := 4;
 18          WHEN 9 THEN v_puntos := 2;
 19          WHEN 10 THEN v_puntos := 1;
 20          ELSE v_puntos := 0;
 21      END CASE;
 22
 23      
 24      SELECT id_equipo INTO v_id_equipo
 25      FROM Piloto
 26      WHERE id_numero = :NEW.id_piloto;
 27
 28      
 29      DECLARE
 30          v_existente INT;
 31      BEGIN
 32          SELECT COUNT(*) INTO v_existente
 33          FROM Posiciones_Equipos
 34          WHERE id_equipo = v_id_equipo;
 35
 36          
 37          IF v_existente > 0 THEN
 38              UPDATE Posiciones_Equipos
 39              SET puntos_totales = puntos_totales + v_puntos
 40              WHERE id_equipo = v_id_equipo;
 41          ELSE
 42              
 43              INSERT INTO Posiciones_Equipos (id_equipo, puntos_totales)
 44              VALUES (v_id_equipo, v_puntos);
 45          END IF;
 46      END;
 47  END;
 48  /

—------------------------------------------------------------------------------------------------------------------------

CREA POSICIONES

MERGE INTO posiciones_equipos pe
USING (
    SELECT id_equipo, puntos_totales, ROWNUM AS posicion
    FROM (
        SELECT id_equipo, puntos_totales
        FROM posiciones_equipos
        ORDER BY puntos_totales DESC
    )
) temp
ON (pe.id_equipo = temp.id_equipo)
WHEN MATCHED THEN
    UPDATE SET pe.posicion = temp.posicion;

—----------------------------------------------------------------------------------------------------------------------


CURSOR

// ESTE CURSO MUESTRA LOS EQUIPOS Y SUS PUNTOS TOTALES 


DECLARE
  CURSOR c_equipos IS
    SELECT pe.id_equipo, pe.puntos_totales, e.nombre
    FROM posiciones_equipos pe
    JOIN equipo e ON pe.id_equipo = e.id_equipo
    ORDER BY pe.puntos_totales DESC;

  v_id_equipo posiciones_equipos.id_equipo%TYPE;
  v_puntos_totales posiciones_equipos.puntos_totales%TYPE;
  v_nombre_equipo equipo.nombre%TYPE;
BEGIN
  OPEN c_equipos;
  
  LOOP
    FETCH c_equipos INTO v_id_equipo, v_puntos_totales, v_nombre_equipo;
    
    EXIT WHEN c_equipos%NOTFOUND;

    DBMS_OUTPUT.PUT_LINE('Equipo: ' || v_nombre_equipo || ', Puntos Totales: ' || v_puntos_totales);
  END LOOP;
  
  CLOSE c_equipos;
END;
/

//SET SERVEROUTPUT ON;
 
—------------------------------------------------------------------------------------------------------------------------

create or replace procedure insertar_piloto2(
    p_nombre in varchar2,
    p_nacionalidad  in  varchar2, 
    p_id_equipo in int

)as

    p_contador int;
    v_id_numero int;

begin

   select count(*)  into p_contador
   from equipo
   where id_equipo =  p_id_equipo;

  if p_contador = 0 then

     DBMS_OUTPUT.PUT_LINE('EL EQUIPO NO EXISTE');
  else

  loop

       select seq_piloto.NEXTVAL into v_id_numero from dual;

     select count(*) into p_contador
     from piloto
     where id_numero = v_id_numero;

     if p_contador=0 then
          exit;
      end if;

     end loop;

     insert into piloto (id_numero,nombre,nacionalidad,id_equipo)
     values (v_id_numero,p_nombre,p_nacionalidad,p_id_equipo);


    DBMS_OUTPUT.PUT_LINE('PILOTO INSERTADO CON ID_NUMERO:' ||  v_id_numero);
 
   end if;
 end;

/  
  

—-------------------------------------------------------------------------------------------------------------------


Para crear la secuencia
 // Crea id_numero en la tabla piloto 

create sequence seq_piloto
start with 100
increment by 1
nocycle
cache 20;


Segundo procedimiento para inserción de piloto  que usa la secuencia previa seq_piloto

//este procedimiento llama a la secuencia para que cree un  id_numero para la tabla piloto 
pero  sí  es este id_numero que crea existe  sigue creando  hasta que encuentre un id_numero disponible 



create or replace procedure insertar_piloto2(
    p_nombre in varchar2,
    p_nacionalidad  in  varchar2, 
    p_id_equipo in int

)as

    p_contador int;
    v_id_numero int;

begin

   select count(*)  into p_contador
   from equipo
   where id_equipo =  p_id_equipo;

  if p_contador = 0 then

     DBMS_OUTPUT.PUT_LINE('EL EQUIPO NO EXISTE');
  else

  loop

       select seq_piloto.NEXTVAL into v_id_numero from dual;

     select count(*) into p_contador
     from piloto
     where id_numero = v_id_numero;

     if p_contador=0 then
          exit;
      end if;

     end loop;

     insert into piloto (id_numero,nombre,nacionalidad,id_equipo)
     values (v_id_numero,p_nombre,p_nacionalidad,p_id_equipo);


    DBMS_OUTPUT.PUT_LINE('PILOTO INSERTADO CON ID_NUMERO:' ||  v_id_numero);
 
   end if;
 end;
/ 

—------------------------------------------------------------------------------------------------------------------------

SQL> create or replace procedure insertar_piloto2(
  2      p_nombre in varchar2,
  3      p_nacionalidad  in  varchar2,
  4      p_id_equipo in int
  5
  6  )as
  7
  8      p_contador int;
  9      v_id_numero int;
 10
 11  begin
 12
 13     select count(*)  into p_contador
 14     from equipo
 15     where id_equipo =  p_id_equipo;
 16
 17    if p_contador = 0 then
 18
 19       DBMS_OUTPUT.PUT_LINE('EL EQUIPO NO EXISTE');
 20    else
 21
 22    loop
 23
 24         select seq_piloto.NEXTVAL into v_id_numero from dual;
 25
 26       select count(*) into p_contador
 27       from piloto
 28       where id_numero = v_id_numero;
 29
 30       if p_contador=0 then
 31            exit;
 32        end if;
 33
 34       end loop;
 35
 36       insert into piloto (id_numero,nombre,nacionalidad,id_equipo)
 37       values (v_id_numero,p_nombre,p_nacionalidad,p_id_equipo);
 38
 39
 40      DBMS_OUTPUT.PUT_LINE('PILOTO INSERTADO CON ID_NUMERO:' ||  v_id_numero);
 41
 42     end if;
 43   end;
 44
 45  /


Para usar este procedimiento combinado con secuencias 

// EXEC insertar_piloto2('Jean Alesi', 'Francés', 5);







Bloque anónimo
// ESTE BLOQUE SOLO INSERTA UN EQUIPO 

DECLARE

   V_ID_EQUIPO int := 77 ;
   v_nombre_equipo varchar(35):='Alfa Bocho';
   v_pais_origen varchar2(20):='Mexico';
begin
   insert into equipo(id_equipo,nombre,pais_origen)
   values(v_id_equipo,v_nombre_equipo,v_pais_origen);
   DBMS_OUTPUT.PUT_LINE('Nuevo equipo insretado con id:'|| v_id_equipo);
end;
/





//TABLAS
SELECT table_name FROM user_tables;


